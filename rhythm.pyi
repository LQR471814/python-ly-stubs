from _typeshed import Incomplete
from collections.abc import Generator
from typing import NamedTuple

durations: Incomplete

def remove_dups(iterable) -> Generator[Incomplete, None, None]: ...

class music_item(NamedTuple):
    tokens: Incomplete
    dur_tokens: Incomplete
    may_remove: Incomplete
    insert_pos: Incomplete
    pos: Incomplete
    end: Incomplete

def music_tokens(source, command: bool = ..., chord: bool = ...) -> Generator[Incomplete, None, None]: ...
def music_items(cursor, command: bool = ..., chord: bool = ..., partial=...) -> Generator[Incomplete, None, Incomplete]: ...
def preceding_duration(cursor): ...
def rhythm_double(cursor) -> None: ...
def rhythm_halve(cursor) -> None: ...
def rhythm_dot(cursor) -> None: ...
def rhythm_undot(cursor) -> None: ...
def rhythm_remove_scaling(cursor) -> None: ...
def rhythm_remove_fraction_scaling(cursor) -> None: ...
def rhythm_remove(cursor) -> None: ...
def rhythm_implicit(cursor) -> None: ...
def rhythm_implicit_per_line(cursor) -> None: ...
def rhythm_explicit(cursor) -> None: ...
def rhythm_overwrite(cursor, durations) -> None: ...
def rhythm_extract(cursor): ...
