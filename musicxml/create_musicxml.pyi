from .midi_sound_map import midi_sound_map as midi_sound_map
from _typeshed import Incomplete

class CreateMusicXML:
    root: Incomplete
    tree: Incomplete
    score_info: Incomplete
    partlist: Incomplete
    part_count: int
    def __init__(self) -> None: ...
    def create_title(self, title) -> None: ...
    def create_score_info(self, tag, info, attr=...) -> None: ...
    def create_partgroup(self, gr_type, num, name: Incomplete | None = ..., abbr: Incomplete | None = ..., symbol: Incomplete | None = ...) -> None: ...
    current_part: Incomplete
    bar_nr: int
    def create_part(self, name: str = ..., abbr: bool = ..., midi: bool = ...) -> None: ...
    current_bar: Incomplete
    def create_measure(self, pickup: bool = ..., **bar_attrs) -> None: ...
    def new_note(self, step, octave, durtype, divdur, alter: int = ..., acc_token: int = ..., voice: int = ..., dot: int = ..., chord: int = ..., grace=..., stem_dir: int = ...) -> None: ...
    def new_unpitched_note(self, step, octave, durtype, divdur, voice: int = ..., dot: int = ..., chord: int = ..., grace=...) -> None: ...
    mult: Incomplete
    def tuplet_note(self, fraction, bs, ttype, nr, divs, atyp: str = ..., ntyp: str = ...) -> None: ...
    def tie_note(self, tie_type) -> None: ...
    def new_rest(self, duration, durtype, pos, dot, voice) -> None: ...
    def new_articulation(self, artic) -> None: ...
    def new_simple_ornament(self, ornament) -> None: ...
    def new_adv_ornament(self, ornament, args) -> None: ...
    def new_bar_attr(self, clef: int = ..., mustime: int = ..., key: Incomplete | None = ..., mode: int = ..., divs: int = ..., multirest: int = ...) -> None: ...
    def create_tempo(self, words, metronome, sound, dots) -> None: ...
    def create_new_node(self, parentnode, nodename, txt) -> None: ...
    def add_creator(self, creator, name) -> None: ...
    def add_rights(self, rights, type: Incomplete | None = ...) -> None: ...
    current_note: Incomplete
    current_notation: Incomplete
    current_artic: Incomplete
    current_ornament: Incomplete
    current_tech: Incomplete
    def create_note(self) -> None: ...
    def add_pitch(self, step, alter, octave) -> None: ...
    def add_unpitched(self, step, octave) -> None: ...
    def add_accidental(self, alter, caut: bool = ..., parenth: bool = ...) -> None: ...
    def set_stem_dir(self, dir) -> None: ...
    def add_rest(self) -> None: ...
    def add_rest_w_pos(self, step, octave) -> None: ...
    def add_skip(self, duration, forward: bool = ...) -> None: ...
    duration: Incomplete
    def add_div_duration(self, divdur) -> None: ...
    def change_div_duration(self, newdura) -> None: ...
    def add_duration_type(self, durtype) -> None: ...
    def add_dot(self) -> None: ...
    def add_beam(self, nr, beam_type) -> None: ...
    def add_tie(self, tie_type) -> None: ...
    def add_grace(self, slash) -> None: ...
    def add_notations(self) -> None: ...
    def add_tied(self, tie_type) -> None: ...
    def add_time_modify(self, fraction) -> None: ...
    def get_time_modify(self): ...
    def adjust_time_modify(self, timemod_node, fraction) -> None: ...
    def add_tuplet_type(self, nr, ttype, actnr: int = ..., acttype: str = ..., normnr: int = ..., normtype: str = ...) -> None: ...
    def add_slur(self, nr, sl_type) -> None: ...
    def add_named_notation(self, notate) -> None: ...
    def add_articulations(self) -> None: ...
    def add_named_artic(self, artic) -> None: ...
    def add_ornaments(self) -> None: ...
    def add_tremolo(self, trem_type, lines) -> None: ...
    def add_trill(self) -> None: ...
    def add_turn(self) -> None: ...
    def add_mordent(self) -> None: ...
    def add_prall(self) -> None: ...
    def add_wavyline(self, end_type) -> None: ...
    def add_gliss(self, linetype, endtype, nr) -> None: ...
    def add_technical(self) -> None: ...
    def add_fingering(self, finger_nr) -> None: ...
    bar_attr: Incomplete
    def create_bar_attr(self) -> None: ...
    def add_divisions(self, div) -> None: ...
    def add_key(self, key, mode) -> None: ...
    def add_time(self, timesign) -> None: ...
    def add_clef(self, sign, line, nr: int = ..., oct_ch: int = ...) -> None: ...
    def add_bar_style(self, multirest: Incomplete | None = ...) -> None: ...
    def new_system(self, force_break) -> None: ...
    def add_barline(self, bl_type, repeat: Incomplete | None = ...) -> None: ...
    def add_backup(self, duration) -> None: ...
    def add_voice(self, voice) -> None: ...
    def add_staff(self, staff) -> None: ...
    def add_staves(self, staves) -> None: ...
    def add_chord(self) -> None: ...
    direction: Incomplete
    def add_direction(self, pos: str = ...) -> None: ...
    def add_dynamic_mark(self, dyn) -> None: ...
    def add_dynamic_wedge(self, wedge_type) -> None: ...
    def add_dynamic_text(self, text) -> None: ...
    def add_dynamic_dashes(self, text) -> None: ...
    def add_octave_shift(self, plac, octdir, size) -> None: ...
    def add_dirwords(self, words) -> None: ...
    def add_mark(self, mark) -> None: ...
    def add_metron_dir(self, unit, beats, dots) -> None: ...
    def add_sound_dir(self, midi_tempo) -> None: ...
    def add_lyric(self, txt, syll, nr, ext: bool = ...) -> None: ...
    def musicxml(self, prettyprint: bool = ...): ...

class MusicXML:
    tree: Incomplete
    root: Incomplete
    def __init__(self, tree) -> None: ...
    def indent(self, indent: str = ...) -> None: ...
    def tostring(self, encoding: str = ...): ...
    def write(self, file, encoding: str = ..., doctype: bool = ...) -> None: ...

def get_tag_index(node, tag): ...

xml_decl_txt: str
doctype_txt: str
